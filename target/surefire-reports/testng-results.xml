<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-22T01:24:13 IST" name="Suite" finished-at="2023-03-22T01:26:10 IST" duration-ms="117150">
    <groups>
      <group name="smoke">
        <method signature="VerifyItemNamesInCartTest.VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" name="VerifyItemWithCorrectName" class="Regression.VerifyItemNamesInCartTest"/>
        <method signature="VerifyItemNamesInCartTest.VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" name="VerifyItemWithInCorrectName" class="Regression.VerifyItemNamesInCartTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-03-22T01:24:13 IST" name="ErrorValidationTest" finished-at="2023-03-22T01:24:37 IST" duration-ms="24079">
      <class name="Regression.ErrorValidationTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.ErrorValidationTest@4c1f22f3]" started-at="2023-03-22T01:24:13 IST" name="readconf" finished-at="2023-03-22T01:24:13 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="verifyerrorlog()[pri:0, instance:Regression.ErrorValidationTest@4c1f22f3]" started-at="2023-03-22T01:24:14 IST" name="verifyerrorlog" finished-at="2023-03-22T01:24:36 IST" duration-ms="22883" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or passwordsss.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or passwordsss.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Regression.ErrorValidationTest.verifyerrorlog(ErrorValidationTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyerrorlog -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.ErrorValidationTest@4c1f22f3]" started-at="2023-03-22T01:24:37 IST" name="CloseApp" finished-at="2023-03-22T01:24:37 IST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyerrorlog status=FAILURE method=ErrorValidationTest.verifyerrorlog()[pri:0, instance:Regression.ErrorValidationTest@4c1f22f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2023-03-22T01:24:39 IST" name="StandAloneTest" finished-at="2023-03-22T01:25:28 IST" duration-ms="49291">
      <class name="Regression.StandAloneTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.StandAloneTest@1b955cac]" started-at="2023-03-22T01:24:39 IST" name="readconf" finished-at="2023-03-22T01:24:39 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="tcc01()[pri:0, instance:Regression.StandAloneTest@1b955cac]" started-at="2023-03-22T01:24:39 IST" name="tcc01" finished-at="2023-03-22T01:25:14 IST" duration-ms="35339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tcc01 -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.StandAloneTest@1b955cac]" started-at="2023-03-22T01:25:14 IST" name="CloseApp" finished-at="2023-03-22T01:25:14 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tcc01 status=SUCCESS method=StandAloneTest.tcc01()[pri:0, instance:Regression.StandAloneTest@1b955cac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
        <test-method signature="verifyorder()[pri:0, instance:Regression.StandAloneTest@1b955cac]" started-at="2023-03-22T01:25:14 IST" name="verifyorder" finished-at="2023-03-22T01:25:28 IST" depends-on-methods="Regression.StandAloneTest.tcc01" duration-ms="13241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyorder -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.StandAloneTest@1b955cac]" started-at="2023-03-22T01:25:28 IST" name="CloseApp" finished-at="2023-03-22T01:25:28 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyorder status=SUCCESS method=StandAloneTest.verifyorder()[pri:0, instance:Regression.StandAloneTest@1b955cac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.StandAloneTest -->
    </test> <!-- StandAloneTest -->
    <test started-at="2023-03-22T01:25:28 IST" name="VerifyItemNamesInCartTest" finished-at="2023-03-22T01:26:10 IST" duration-ms="42318">
      <class name="Regression.VerifyItemNamesInCartTest">
        <test-method is-config="true" signature="readconf()[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" started-at="2023-03-22T01:25:28 IST" name="readconf" finished-at="2023-03-22T01:25:28 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readconf -->
        <test-method signature="VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" started-at="2023-03-22T01:25:28 IST" name="VerifyItemWithCorrectName" data-provider="getdata" finished-at="2023-03-22T01:25:50 IST" duration-ms="22341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Hyderabad@2023, product=zara coat 3, email=78bikash.hyd@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyItemWithCorrectName -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" started-at="2023-03-22T01:25:51 IST" name="CloseApp" finished-at="2023-03-22T01:25:51 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyItemWithCorrectName status=SUCCESS method=VerifyItemNamesInCartTest.VerifyItemWithCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
        <test-method signature="VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" started-at="2023-03-22T01:25:51 IST" name="VerifyItemWithInCorrectName" data-provider="getdata" finished-at="2023-03-22T01:26:10 IST" duration-ms="19244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Hyderabad@2023, product=zara coat 3, email=78bikash.hyd@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyItemWithInCorrectName -->
        <test-method is-config="true" signature="CloseApp(org.testng.ITestResult)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4]" started-at="2023-03-22T01:26:10 IST" name="CloseApp" finished-at="2023-03-22T01:26:10 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyItemWithInCorrectName status=SUCCESS method=VerifyItemNamesInCartTest.VerifyItemWithInCorrectName(java.util.HashMap)[pri:0, instance:Regression.VerifyItemNamesInCartTest@535779e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- Regression.VerifyItemNamesInCartTest -->
    </test> <!-- VerifyItemNamesInCartTest -->
  </suite> <!-- Suite -->
</testng-results>
